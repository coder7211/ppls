<canvas id="fishTank"></canvas>

<script>
const canvas = document.getElementById("fishTank");
const ctx = canvas.getContext("2d");

canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

let ripples = [];
let waterHeight = canvas.height * 0.25; // bottom 1/4 is water

class Ripple {
  constructor(x, y, delay = 0, speed = 2, lineWidth = 2) {
    this.x = x;
    this.y = y;
    this.radius = 0;
    this.alpha = 1;
    this.delay = delay;
    this.speed = speed;
    this.lineWidth = lineWidth;
  }

  draw() {
    if (this.delay > 0) return;
    ctx.beginPath();
    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);
    ctx.strokeStyle = `rgba(255, 255, 255, ${this.alpha})`;
    ctx.lineWidth = this.lineWidth;
    ctx.stroke();
    ctx.closePath();
  }

  update() {
    if (this.delay > 0) {
      this.delay--;
      return;
    }
    this.radius += this.speed;
    this.alpha -= 0.01;
  }
}

function drawWater() {
  ctx.fillStyle = "#0066cc";
  ctx.fillRect(0, canvas.height - waterHeight, canvas.width, waterHeight);
}

function animate() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawWater();

  for (let i = ripples.length - 1; i >= 0; i--) {
    let r = ripples[i];
    r.update();
    r.draw();
    if (r.alpha <= 0) {
      ripples.splice(i, 1);
    }
  }

  requestAnimationFrame(animate);
}

// Add realistic splash
canvas.addEventListener("click", (e) => {
  if (e.clientY > canvas.height - waterHeight) {
    // Impact ripple (fast + bold)
    ripples.push(new Ripple(e.clientX, e.clientY, 0, 3, 3));
    // Secondary ripples (delayed + thinner)
    ripples.push(new Ripple(e.clientX, e.clientY, 10, 2, 2));
    ripples.push(new Ripple(e.clientX, e.clientY, 20, 2, 1));
    ripples.push(new Ripple(e.clientX, e.clientY, 30, 1.5, 1));
  }
});

// Resize handling
window.addEventListener("resize", () => {
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  waterHeight = canvas.height * 0.25;
});

animate();
</script>
